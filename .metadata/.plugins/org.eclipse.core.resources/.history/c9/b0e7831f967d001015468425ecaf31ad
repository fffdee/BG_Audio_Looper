/**
 **************************************************************************************
 * @file    audio_looper.h
 * @brief   Audio looper header file
 *
 * @author  BanGO
 * @version V1.0.0
 *
 * @Copyright (C) 2025, Audio Looper Project. All rights reserved.
 **************************************************************************************
 */

#ifndef __AUDIO_LOOPER_H__
#define __AUDIO_LOOPER_H__

#include <stdint.h>

// Loop状态枚举
typedef enum {
    LOOP_STATE_IDLE = 0,        // 空闲状态，等待录制
    LOOP_STATE_RECORDING = 1,   // 录制状态
    LOOP_STATE_PLAYING = 2      // 播放状态
} LoopState_t;

// Loop管理器结构体
typedef struct {
    LoopState_t state;              // 当前状态
    uint32_t sector_address;        // 当前Flash地址
    uint32_t record_length;         // 录制数据长度
    uint32_t play_position;         // 播放位置
    uint8_t is_initialized;         // 是否已初始化
    uint8_t is_new_recording;       // 是否为新录制
} LoopManager_t;

// 全局Loop管理器
extern LoopManager_t g_loop_manager;

// 函数声明
void loop_init(void);
void loop_reset(void);
void loop_handle_button_press(void);
void loop_process_recording(int16_t* audio_data, uint8_t* buffer, uint16_t length);
void loop_process_playback(int16_t* output_data, uint8_t* buffer, uint16_t length);
void loop_timer_update(void);

// 状态查询函数
LoopState_t loop_get_state(void);
uint8_t loop_is_recording(void);
uint8_t loop_is_playing(void);
uint32_t loop_get_current_address(void);
uint32_t loop_get_record_length(void);

#endif /* __AUDIO_LOOPER_H__ */
